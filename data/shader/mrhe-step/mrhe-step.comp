#version 460

#include "common.glsl"

bool IsNanOrInf(float x)
{
	return isnan(x) || isinf(x) || abs(x) > 1000.0;
}

float ModifyDeltaWeight(float deltaWeight, const float weight)
{
	const float border = 100.0;

	if (IsNanOrInf(deltaWeight))
	{
		deltaWeight = border * sign(deltaWeight);
	}

	// Weight decay
	deltaWeight += -weight * mrhe.weightDecay;

	return deltaWeight;
}

void StepMrhe(const uint index)
{
	float deltaMrhe = ModifyDeltaWeight(mrDeltaHashTable[index], mrHashTable[index]);
	mrHashTable[index] += deltaMrhe * mrhe.learningRate;

	if (IsNanOrInf(mrHashTable[index]))
	{
		mrHashTable[index] = 0.0;
	}
}

void ClearDeltaMrhe(const uint index)
{
	mrDeltaHashTable[index] = 0.0;
}

void main()
{
	const uint index = gl_GlobalInvocationID.x;
	const uint maxIndex = mrhe.levelCount * mrhe.featureCount * mrhe.hashTableSize;
	if (index >= maxIndex)
	{
		return;
	}

	StepMrhe(index);
	ClearDeltaMrhe(index);
}

#version 460
#include "common.glsl"

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

void main()
{
	const uint x = gl_GlobalInvocationID.x;
	const uint y = gl_GlobalInvocationID.y;
	const ivec2 outputImageCoord = ivec2(x, y);
	const ivec2 invertedYImageCoord = ivec2(x, RENDER_HEIGHT - (y + 1));

	const vec4 primaryRayColor = imageLoad(nrcPrimaryRayColorImage, invertedYImageCoord);
	const vec4 primaryRayInfo = imageLoad(nrcPrimaryRayInfoImage, invertedYImageCoord);
	const vec4 neuralRayColor = imageLoad(nrcNeuralRayColorImage, invertedYImageCoord);

	vec4 outputColor = vec4(primaryRayColor.xyz, 1.0);
	if (primaryRayInfo.x > 0.0)
	{
		outputColor.xyz += neuralRayColor.xyz * primaryRayColor.w;
	}

	imageStore(nrcOutputImage, outputImageCoord, outputColor);
}

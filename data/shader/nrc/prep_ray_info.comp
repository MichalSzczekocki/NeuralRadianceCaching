#version 460
#define NRC
#include "common.glsl"

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

void StoreNrcInferInput(const vec3 pos, const vec3 dir)
{
    // Calc index
    const uint x = gl_GlobalInvocationID.x;
    const uint y = gl_GlobalInvocationID.y;
    const uint linearPixelIndex = (y * RENDER_WIDTH) + x;

    // Calc dir
    const float theta = atan(dir.z, dir.x);
    const float phi = acos(dir.y / length(dir.xz));

    // Store infer input
    nrcInferInput[linearPixelIndex].posX = pos.x;
    nrcInferInput[linearPixelIndex].posY = pos.y;
    nrcInferInput[linearPixelIndex].posZ = pos.z;
    nrcInferInput[linearPixelIndex].theta = theta;
    nrcInferInput[linearPixelIndex].phi = phi;
}

void main()
{
    const uint x = gl_GlobalInvocationID.x;
    const uint y = gl_GlobalInvocationID.y;
    const ivec2 imageCoord = ivec2(x, y);

    const vec3 rayOrigin = imageLoad(nrcRayOriginImage, imageCoord).xyz;
    const vec3 rayDir = imageLoad(nrcRayDirImage, imageCoord).xyz;

    StoreNrcInferInput(rayOrigin, rayDir);
}
